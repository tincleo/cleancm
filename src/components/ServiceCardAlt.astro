---
export interface Props {
  title: string;
  description: string;
  image: string;
  link: string;
  imageOnRight: boolean;
}

const { title, description, image, link, imageOnRight } = Astro.props;
---

<div class={`service-card ${imageOnRight ? 'image-right' : 'image-left'}`}>
  <div class="content">
    <h2>{title}</h2>
    <p>{description}</p>
    <a href={link} class="more-info">More Info</a>
  </div>
  <div class="image" style={`background-image: url(${image});`}></div>
</div>

<style>
  .service-card {
    display: flex;
    background-color: #23262d;
    border-radius: 8px;
    overflow: hidden;
    margin-bottom: 2rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .service-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
  }

  .image-right {
    flex-direction: row-reverse;
  }

  .content {
    flex: 1;
    padding: 2rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .image {
    flex: 1;
    background-size: cover;
    background-position: center;
    min-height: 300px;
  }

  h2 {
    color: rgb(var(--accent-light));
    margin-bottom: 1rem;
    font-size: 1.5rem;
  }

  p {
    color: #c2c2c2;
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }

  .more-info {
    display: inline-block;
    background-color: rgb(var(--accent));
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    text-decoration: none;
    transition: background-color 0.3s ease;
    align-self: flex-start;
    font-weight: bold;
  }

  .more-info:hover {
    background-color: rgb(var(--accent-dark));
  }

  @media (max-width: 768px) {
    .service-card {
      flex-direction: column;
    }

    .image {
      min-height: 200px;
    }
  }
</style>